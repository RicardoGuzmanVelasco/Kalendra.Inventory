@startuml

package Domain
{
    interface IInventory
    {
        Items
        HasItem()
        AddItem()
        RemoveItem()
    }
    IInventory --> ItemPile
    IInventory -->IInventoryItem
    
    interface ICategorizedInventory
    {
        Categories
        HasCategory()
        GetItems()
    }
    ICategorizedInventory --|> IInventory
    
    interface IWeightedInventory
    {
        MaxWeight
        CurrentWeight
        OnOverweight <<event>>
        IncreaseMaxWeight()
        CanBearItem()
    }
    IWeightedInventory --|> IInventory
    
    interface IInventoryItemCategory
    
    interface IInventoryItem
    {
        Category
        Weight
    }
    IInventoryItem --> IInventoryItemCategory
    
    class ItemPile <<Data structure>>
    {   
        item : IInventoryItem
        count : int
    }
    ItemPile --> IInventoryItem 
    
    class GeneralistInventory
    {
        -itemPiles : List<itemPile>
    }
    GeneralistInventory --|> IWeightedInventory
    GeneralistInventory --|> ICategorizedInventory
    
    class LimitedWeightedInventory <<Decorator>>
    {
        -decorated : IWeightedInventory
    }
    LimitedWeightedInventory --|> IWeightedInventory
    LimitedWeightedInventory o--  IWeightedInventory 
    
}

@enduml